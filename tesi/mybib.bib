@INPROCEEDINGS{
    mercury,
    author={Soumagne, Jerome and Kimpe, Dries and Zounmevo, Judicael and Chaarawi, Mohamad and Koziol, Quincey and Afsahi, Ahmad and Ross, Robert},
    booktitle={2013 IEEE International Conference on Cluster Computing (CLUSTER)},
    title={Mercury: Enabling remote procedure call for high-performance computing},
    year={2013},
    volume={},
    number={},
    pages={1-8},
    doi={10.1109/CLUSTER.2013.6702617}
}

@INPROCEEDINGS{
    libfabric,
    author={Grun, Paul and Hefty, Sean and Sur, Sayantan and Goodell, David and Russell, Robert D. and Pritchard, Howard and Squyres, Jeffrey M.},
    booktitle={2015 IEEE 23rd Annual Symposium on High-Performance Interconnects},
    title={A Brief Introduction to the OpenFabrics Interfaces - A New Network API for Maximizing High Performance Application Efficiency},
    year={2015},
    volume={},
    number={},
    pages={34-39},
    doi={10.1109/HOTI.2015.19}
}


@misc{nal_guide,
	title = {Mercury - Network {Abstraction} {Layer}},
	url = {https://mercury-hpc.github.io/user/na/},
}

@misc{ofi_plugin,
	title = {Mercury - Network Abstraction Layer. OFI plugin.},
	url = {https://mercury-hpc.github.io/user/ofi/},
}

@misc{ofi_tcp,
	title = {OFI/Libfabric - tcp sockets fabric provider},
	url = {https://ofiwg.github.io/libfabric/v1.11.1/man/fi_tcp.7.html},
}

@misc{ofi_socket,
	title = {OFI/Libfabric - sockets fabric provider},
	url = {https://ofiwg.github.io/libfabric/v1.0.0/man/fi_sockets.7.html},
}

@misc{git_mercury_tcp,
	title = {Mercury - Issue \#418},
	url = {https://github.com/mercury-hpc/mercury/issues/418},
}

@misc{git_mercury_mpi,
	title = {Mercury - Issue \#489},
	url = {https://github.com/mercury-hpc/mercury/issues/489},
}

@misc{git_mercury_tcp332,
	title = {Mercury - Issue \#332},
	url = {https://github.com/mercury-hpc/mercury/issues/332},
}

@misc{libfabric-github,
	title = {Open Fabric Interfaces},
	url = {https://github.com/ofiwg/libfabric},
}

@misc{mercury_plugins,
	title = {Mercury - Network Abstraction Layer. Available plugins.},
	url = {https://mercury-hpc.github.io/user/na/#available-plugins},
}

@misc{mpi_plugin,
	title = {Mercury - Network Abstraction Layer. MPI plugin.},
	url = {https://mercury-hpc.github.io/user/na/#deprecated-plugins},
}

@misc{sm_plugin,
	title = {Mercury - Network Abstraction Layer. Shared Memory plugin.},
	url = {https://mercury-hpc.github.io/user/sm/},
}

@misc{ucx_plugin,
	title = {Mercury - Network Abstraction Layer. UCX plugin.},
	url = {https://mercury-hpc.github.io/user/na/#ucx},
}

@misc{
    merc_git,
	title = {mercury-hpc},
	url = {https://github.com/mercury-hpc/mercury},
}

@misc{
    argobot,
	title = {Argobots: A lightweight low-level threading framework},
	url = {https://www.argobots.org/},
}


@ARTICLE{argobots-paper,  author={Seo, Sangmin and Amer, Abdelhalim and Balaji, Pavan and Bordage, Cyril and Bosilca, George and Brooks, Alex and Carns, Philip and Castelló, Adrián and Genet, Damien and Herault, Thomas and Iwasaki, Shintaro and Jindal, Prateek and Kalé, Laxmikant V. and Krishnamoorthy, Sriram and Lifflander, Jonathan and Lu, Huiwei and Meneses, Esteban and Snir, Marc and Sun, Yanhua and Taura, Kenjiro and Beckman, Pete},  journal={IEEE Transactions on Parallel and Distributed Systems},   title={Argobots: A Lightweight Low-Level Threading and Tasking Framework},   year={2018},  volume={29},  number={3},  pages={512-526},  doi={10.1109/TPDS.2017.2766062}}

@article{mochi-core,
author = {Ross, Robert B. and Amvrosiadis, George and Carns, Philip and Cranor, Charles D. and Dorier, Matthieu and Harms, Kevin and Ganger, Greg and Gibson, Garth and Gutierrez, Samuel K. and Latham, Robert and Robey, Bob and Robinson, Dana and Settlemyer, Bradley and Shipman, Galen and Snyder, Shane and Soumagne, Jerome and Zheng, Qing},
title = {Mochi: Composing Data Services for High-Performance Computing Environments},
year = {2020},
issue_date = {Jan 2020},
publisher = {Springer-Verlag},
address = {Berlin, Heidelberg},
volume = {35},
number = {1},
issn = {1000-9000},
url = {https://doi.org/10.1007/s11390-020-9802-0},
doi = {10.1007/s11390-020-9802-0},
abstract = {Technology enhancements and the growing breadth of application workflows running on high-performance computing (HPC) platforms drive the development of new data services that provide high performance on these new platforms, provide capable and productive interfaces and abstractions for a variety of applications, and are readily adapted when new technologies are deployed. The Mochi framework enables composition of specialized distributed data services from a collection of connectable modules and subservices. Rather than forcing all applications to use a one-size-fits-all data staging and I/O software configuration, Mochi allows each application to use a data service specialized to its needs and access patterns. This paper introduces the Mochi framework and methodology. The Mochi core components and microservices are described. Examples of the application of the Mochi methodology to the development of four specialized services are detailed. Finally, a performance evaluation of a Mochi core component, a Mochi microservice, and a composed service providing an object model is performed. The paper concludes by positioning Mochi relative to related work in the HPC space and indicating directions for future work.},
journal = {J. Comput. Sci. Technol.},
month = {jan},
pages = {121–144},
numpages = {24},
keywords = {high-performance computing, distributed services, data-intensive computing, storage and I/O}
}

@inproceedings{openucx,
  title={UCX: an open source framework for HPC network APIs and beyond},
  author={Shamis, Pavel and Venkata, Manjunath Gorentla and Lopez, M Graham and Baker, Matthew B and Hernandez, Oscar and Itigin, Yossi and Dubman, Mike and Shainer, Gilad and Graham, Richard L and Liss, Liran and others},
  booktitle={2015 IEEE 23rd Annual Symposium on High-Performance Interconnects},
  pages={40--43},
  year={2015},
  organization={IEEE}
}

@misc{
    jsonc,
	title = {JSON-C - A JSON implementation in C},
	url = {https://github.com/json-c/json-c/wiki},
}

@INPROCEEDINGS{iofsl,  author={Ali, Nawab and Carns, Philip and Iskra, Kamil and Kimpe, Dries and Lang, Samuel and Latham, Robert and Ross, Robert and Ward, Lee and Sadayappan, P.},  booktitle={2009 IEEE International Conference on Cluster Computing and Workshops},   title={Scalable I/O forwarding framework for high-performance computing systems},   year={2009},  volume={},  number={},  pages={1-10},  doi={10.1109/CLUSTR.2009.5289188}}

@INPROCEEDINGS{big-data-movingforward,  author={Kaisler, Stephen and Armour, Frank and Espinosa, J. Alberto and Money, William},  booktitle={2013 46th Hawaii International Conference on System Sciences},   title={Big Data: Issues and Challenges Moving Forward},   year={2013},  volume={},  number={},  pages={995-1004},  doi={10.1109/HICSS.2013.645}}

@article{survey-distributed,
	title = {A survey on the Distributed Computing stack},
	journal = {Computer Science Review},
	volume = {42},
	pages = {100422},
	year = {2021},
	issn = {1574-0137},
	doi = {https://doi.org/10.1016/j.cosrev.2021.100422},
	url = {https://www.sciencedirect.com/science/article/pii/S1574013721000629},
	author = {Cristian Ramon-Cortes and Pol Alvarez and Francesc Lordan and Javier Alvarez and Jorge Ejarque and Rosa M. Badia},
	keywords = {Distributed systems, Distributed programming models, Distributed Computing, Cloud computing, Task-based Workflows, Dataflows, Graph Processing, Streaming, Data Sharing, Resource Management, Infrastructure managers},
	abstract = {In this paper, we review the background and the state of the art of the Distributed Computing software stack. We aim to provide the readers with a comprehensive overview of this area by supplying a detailed big-picture of the latest technologies. First, we introduce the general background of Distributed Computing and propose a layered top–bottom classification of the latest available software. Next, we focus on each abstraction layer, i.e. Application Development (including Task-based Workflows, Dataflows, and Graph Processing), Platform (including Data Sharing and Resource Management), Communication (including Remote Invocation, Message Passing, and Message Queuing), and Infrastructure (including Batch and Interactive systems). For each layer, we give a general background, discuss its technical challenges, review the latest programming languages, programming models, frameworks, libraries, and tools, and provide a summary table comparing the features of each alternative. Finally, we conclude this survey with a discussion of open problems and future directions.}
}

@inbook{fastflow,
	author = {Aldinucci, Marco and Danelutto, Marco and Kilpatrick, Peter and Torquati, Massimo},
	year = {2014},
	month = {03},
	pages = {},
	title = {Fastflow: High-Level and Efficient Streaming on Multicore},
	isbn = {9780470936900},
	journal = {Programming Multicore and Many-Core Computing Systems},
	doi = {10.1002/9781119332015.ch13}
}

@inproceedings{fastflow-highlevel,
	title={FastFlow: High-level and Efficient Streaming on Multi-core},
	author={Marco Aldinucci and Marco Danelutto and Peter Kilpatrick and Massimo Torquati},
	year={2017}
}


@misc{javarmi,
	title = {Oracle, Java remote method invocation specification},
	url = {https://docs.oracle.com/javase/9/docs/specs/rmi/},
	year = {2017},
}

@article{javaRMI-toHPC++,
	author = {Breg, Fabian and Diwan, Shridhar and Villacis, Juan and Balasubramanian, Jayashree and Akman, Esra and Gannon, Dennis},
	year = {2012},
	month = {12},
	pages = {},
	title = {Java RMI Performance and Object Model Interoperability: Experiments with Java/HPC++ Distributed Components},
	journal = {zz}
}

@book{zeromq,
	title = {{ZeroMQ}},
	isbn = {9781449334062},
	url = {https://www.oreilly.com/library/view/zeromq/9781449334437/},
	publisher = {O'Reilly Media},
	author = {Hintjens, Pieter},
	month = mar,
	year = {2013},
}

@manual{mpi40,
	author = "{Message Passing Interface Forum}",
	title  = "{MPI}: A Message-Passing Interface Standard Version 4.0",
	url    = "https://www.mpi-forum.org/docs/mpi-4.0/mpi40-report.pdf",
	year   = 2021,
	month  = jun
}

@InProceedings{openMPI,
	author="Gabriel, Edgar
	and Fagg, Graham E.
	and Bosilca, George
	and Angskun, Thara
	and Dongarra, Jack J.
	and Squyres, Jeffrey M.
	and Sahay, Vishal
	and Kambadur, Prabhanjan
	and Barrett, Brian
	and Lumsdaine, Andrew
	and Castain, Ralph H.
	and Daniel, David J.
	and Graham, Richard L.
	and Woodall, Timothy S.",
	editor="Kranzlm{\"u}ller, Dieter
	and Kacsuk, P{\'e}ter
	and Dongarra, Jack",
	title="Open MPI: Goals, Concept, and Design of a Next Generation MPI Implementation",
	booktitle="Recent Advances in Parallel Virtual Machine and Message Passing Interface",
	year="2004",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="97--104",
	abstract="A large number of MPI implementations are currently available, each of which emphasize different aspects of high-performance computing or are intended to solve a specific research problem. The result is a myriad of incompatible MPI implementations, all of which require separate installation, and the combination of which present significant logistical challenges for end users. Building upon prior research, and influenced by experience gained from the code bases of the LAM/MPI, LA-MPI, and FT-MPI projects, Open MPI is an all-new, production-quality MPI-2 implementation that is fundamentally centered around component concepts. Open MPI provides a unique combination of novel features previously unavailable in an open-source, production-quality implementation of MPI. Its component architecture provides both a stable platform for third-party research as well as enabling the run-time composition of independent software add-ons. This paper presents a high-level overview the goals, design, and implementation of Open MPI.",
	isbn="978-3-540-30218-6"
}

@misc{grpc,
	title = {{gRPC} {Motivation} and {Design} {Principles}},
	url = {https://grpc.io/blog/principles/},
	abstract = {Motivation Google has been using a single general-purpose RPC infrastructure called Stubby to connect the large number of microservices running within and across our data centers for over a decade. Our internal systems have long embraced the microservice architecture gaining popularity today. Having a uniform, cross-platform RPC infrastructure has allowed for the rollout of fleet-wide improvements in efficiency, security, reliability and behavioral analysis critical to supporting the incredible growth seen in that period.},
	language = {en},
	urldate = {2022-05-24},
	journal = {gRPC},
	month = sep,
	year = {2015},
}

@misc{MPICH,
	title = {{MPICH} {Overview} {\textbar} {MPICH}},
	url = {https://www.mpich.org/about/overview/},
	language = {en-US},
	urldate = {2022-05-24},
}